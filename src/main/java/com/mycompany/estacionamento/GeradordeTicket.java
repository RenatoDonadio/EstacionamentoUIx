package com.mycompany.estacionamento;
import java.text.ParseException;
 import java.text.SimpleDateFormat;
  import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Pichau
 */
public class GeradordeTicket extends javax.swing.JFrame {

    /**
     * Creates new form GeradordeTicket
     */
    public GeradordeTicket() {
        initComponents();
    }

    String valorCalculado;
    String placacorreta;
    String horarioCorreto;
    String ticketcorreto;
    String valorjapago;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCarro = new javax.swing.JTextField();
        txtPlaca = new javax.swing.JTextField();
        txtHorario = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        btnGerar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtHorarioS = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTicket = new javax.swing.JTextField();
        btnPagar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPainel = new javax.swing.JTextArea();
        btnConsultar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Carro");

        jLabel2.setText("Placa");

        jLabel3.setText("Horario");

        txtCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarroActionPerformed(evt);
            }
        });

        txtPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlacaActionPerformed(evt);
            }
        });

        txtHorario.setToolTipText("");
        txtHorario.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHorarioActionPerformed(evt);
            }
        });
        txtHorario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHorarioKeyTyped(evt);
            }
        });

        btnCalcular.setText("CALCULAR");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        btnGerar.setText("GERAR");
        btnGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarActionPerformed(evt);
            }
        });

        jLabel4.setText("HorarioS");

        txtHorarioS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHorarioSActionPerformed(evt);
            }
        });

        jLabel5.setText("Ticket");

        txtTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTicketActionPerformed(evt);
            }
        });

        btnPagar.setText("PAGAR");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        jLabel6.setText("Valor");

        txtValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorActionPerformed(evt);
            }
        });

        txtPainel.setEditable(false);
        txtPainel.setColumns(20);
        txtPainel.setLineWrap(true);
        txtPainel.setRows(5);
        jScrollPane1.setViewportView(txtPainel);

        btnConsultar.setText("CONSULTAR TICKET");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnAtualizar.setText("ATUALIZAR");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnDeletar.setText("DELETAR");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(30, 30, 30)
                                .addComponent(txtCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHorarioS, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                                    .addComponent(txtTicket)
                                    .addComponent(txtValor))))
                        .addGap(65, 65, 65)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHorarioS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlacaActionPerformed

    private void txtCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarroActionPerformed

    private void txtHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHorarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHorarioActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        
       
        
         String stringTicket = txtTicket.getText();
        String Stringhorario = txtHorario.getText();
        String StringhorarioS = txtHorarioS.getText();
   
         if("".equals(stringTicket) && "".equals(Stringhorario) && "".equals(StringhorarioS)){
            txtPainel.setText("Nenhum valor inserido.");
            
        }else if("".equals(stringTicket)){
           txtPainel.setText("Nenhum valor de carro inserido!");
         
         }else if ("".equals(Stringhorario)){
           txtPainel.setText("Nenhum valor de placa inserido!");
         }else if ("".equals(StringhorarioS)){
           txtPainel.setText("Nenhum horario inserido!");
         }else{
     
           
        
     SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
     DadosHoras horarios = new DadosHoras(Stringhorario,StringhorarioS,stringTicket);
     DadosEstac estacionamento = new DadosEstac(stringTicket);
     if (horarioCorreto.equals(horarios.getHora()) && ticketcorreto.equals(horarios.getTicket())) {
        
            try{
          int ticket = Integer.parseInt(stringTicket);
          boolean transferir = DadosCarDAO.transferir(estacionamento);
          
         Date hora = sdf.parse(Stringhorario);
         Date horaS = sdf.parse(StringhorarioS);
         
         double horaI = hora.getHours();
         double horaF = horaS.getHours();
         
       boolean inserir = DadosCarDAO.insert(horarios);
       
       
          
         double Diferencahoras = horaF - horaI;
         
         double valor = Diferencahoras * 10;
         
          valorCalculado = String.valueOf(valor);
          valorjapago = String.valueOf(valor);
         
         
         
         cleanFields();
         
         
         
         
         txtPainel.setText("O valor do seu ticket " + " é: R$ " + Double.toString(valor));
         
     }catch(Exception e){
        txtPainel.setText("Valor inválido.");
       
         
     }
           
      
     }else{
         txtPainel.setText("Horario ou ticket inexistente.");
     }
      
       
         
         
    
        
        
       
        
        
        
      
        
        
        
        
        
        
    }//GEN-LAST:event_btnCalcularActionPerformed
    }
    private void btnGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarActionPerformed
         String carro = txtCarro.getText();
         String placa = txtPlaca.getText();
         String horario = txtHorario.getText();
         
         
         
         if("".equals(carro) && "".equals(placa) && "".equals(horario)){
            txtPainel.setText("Nenhum valor inserido.");
            
        }else if("".equals(carro)){
           txtPainel.setText("Nenhum valor de carro inserido!");
         
         }else if ("".equals(placa)){
           txtPainel.setText("Nenhum valor de placa inserido!");
         }else if ("".equals(horario)){
           txtPainel.setText("Nenhum horario inserido!");
         }else{
         SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        try {
            Date hora = sdf.parse(horario);
            
        } catch (ParseException ex) {
            txtPainel.setText("Hora inválida.");
        }
         
         
        
         
        
         cleanFields();
        
         DadosCar carros = new DadosCar(carro, placa, horario);
        
        
        boolean result = DadosCarDAO.inserir(carros);
        placacorreta = String.valueOf(placa);
        horarioCorreto = String.valueOf(horario);
        
        if(result) {
            txtPainel.setText("Inserido com sucesso!");
            // JOptionPane.showMessageDialog(this, "SUCESSO!!!");
        } else {
            txtPainel.setText("Erro na inserção!");
        }
        
         }
        
    }//GEN-LAST:event_btnGerarActionPerformed

    private void txtHorarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHorarioKeyTyped
        // TODO add your handling code here:
        String caracteres = "0123456789>:";
        if (!caracteres.contains(evt.getKeyChar() + "")){
            evt.consume();
        }
    }//GEN-LAST:event_txtHorarioKeyTyped

    private void txtHorarioSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHorarioSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHorarioSActionPerformed

    private void txtTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTicketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTicketActionPerformed

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
       
       
        
        
       
         
         
      
         String Sticket = txtTicket.getText();
         
         String Valor = txtValor.getText();
         
         
         
         if ("".equals(Sticket) && ("".equals(Valor))){
             txtPainel.setText("Nenhum valor inserido.");
         }else if("".equals(Sticket)){
             txtPainel.setText("Nenhum ticket inserido.");
         }else if("".equals(Valor)){
             txtPainel.setText("Nenhum preço inserido.");
         }else{
         int ticket = Integer.parseInt(Sticket);
         DadosValor valor = new DadosValor(ticket,Valor);
         String ValorPago = "Pago";
         String valorpagoerro = valorjapago;
         
       
         if (valorCalculado.equals(valor.getValor())){
              
             
             
             
             if(valorjapago.equals(valorpagoerro)){
                 boolean resultado = DadosCarDAO.insira(valor);
             txtPainel.setText("Pagamento efetuado com sucesso!");
             valorjapago = ValorPago;
             boolean outcome = DadosCarDAO.AtualizarValorPago(ticket, ValorPago);
             }else if (valorjapago.equals(ValorPago)){
                 txtPainel.setText("Esse ticket já foi pago.");
               
             }
             
             
        
        
         
             
             
             
             
             
               
              
                       
                      
            
                 
            
             
         
        
         
         
         
        
        
       
            
            
            
             
         
             
             
         
        
         
        
    
       
        
     
        
       
         
       
       
         
         
         
        
        
        
       
        
        
        
        
        
        cleanFields();
    }//GEN-LAST:event_btnPagarActionPerformed
        
    }
    }
    private void txtValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:
         String StringTicket = txtTicket.getText();
         if ("".equals(StringTicket)){
             txtPainel.setText("Nenhum ticket inserido.");
         }else{
        // transforme o texto em int
        int ticket = Integer.parseInt(StringTicket);
        ticketcorreto = String.valueOf(StringTicket);
        
        DadosCar carros = DadosCarDAO.buscarPorTicket(ticket);
        
         
        if(carros != null) {
            txtPainel.setText(carros.toString());
        } else {
            txtPainel.setText("Não localizado");
        }
    }//GEN-LAST:event_btnConsultarActionPerformed
    }
    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
         String textoTicket = txtTicket.getText();
        int ticket = Integer.parseInt(textoTicket);
        String carro = txtCarro.getText();
        if("".equals(carro) && "".equals(ticket)){
            txtPainel.setText("Nenhum valor inserido.");
            
        }else if("".equals(carro)){
           txtPainel.setText("Nenhum valor de carro inserido!");
         
         }else if ("".equals(ticket)){
           txtPainel.setText("Nenhum valor de ticket inserido!");
        
         }else if(textoTicket.equals(ticketcorreto)){
             cleanFields();
        
        int result =  DadosCarDAO.atualizarCarro(ticket, carro);
        
        if(result > 0) {
            txtPainel.setText("Atualizado com sucesso!");
        } else {
            txtPainel.setText("Não encontrado");
        }
            
        }else{
            txtPainel.setText("Ticket inexistente.");
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        // TODO add your handling code here:
        String Sticket = txtTicket.getText();
        int ticket = Integer.parseInt(Sticket);
        if("".equals(Sticket)){
            txtPainel.setText("Nenhum valor inserido!");
        }else{
        
          int conclusao = DadosCarDAO.apagarPorTicket(ticket);
        
        if(conclusao > 0) {
            int conclusao2 = DadosCarDAO.apagarPorTicketHorario(ticket);
            int conclusao3 = DadosCarDAO.apagarPorTicketValor(ticket);
            int conclusao4 = DadosCarDAO.apagarPorTicketCarros(ticket);
            txtPainel.setText("Apagado com sucesso!");
        } else {
            txtPainel.setText("Não encontrado");
        }
        
    }//GEN-LAST:event_btnDeletarActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeradordeTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeradordeTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeradordeTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeradordeTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeradordeTicket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnGerar;
    private javax.swing.JButton btnPagar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCarro;
    private javax.swing.JTextField txtHorario;
    private javax.swing.JTextField txtHorarioS;
    private javax.swing.JTextArea txtPainel;
    private javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtTicket;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

    private void cleanFields() {
         txtCarro.setText("");
        txtPlaca.setText("");
        txtHorario.setText("");
        txtHorarioS.setText("");
        txtTicket.setText("");
    }
    
    }

